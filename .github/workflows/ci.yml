name: "CI"
on: # Run the workflows on push/PR to the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-supply-chain:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./supply-chain
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16.15.0"
      - name: Install dependencies
        run: |
          npm i -g npm@latest
          npm ci
      - name: Run build script
        run: npm run build

  build-api-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./net-emissions-token-network/api-server
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16.15.0"
      - name: Install dependencies
        run: |
          npm i -g npm@latest
          npm ci
      - name: Run build script
        run: npm run build

  build-react-app:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./net-emissions-token-network/interface
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16.15.0"
      - name: Install dependencies
        run: yarn ci
      - name: Run build script
        run: CI=false yarn react-app:build

  lint-typescript-app: # Run lint script for the typescript_app directory
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./emissions-data/typescript_app
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16.15.0"
      - name: Install dependencies
        run: |
          npm i -g npm@latest
          npm ci
      - name: Run lint script
        run: npm run lint

  lint-utility-emissions-chaincode: # Run lint script for the chaincode/emissionscontract/typescript directory
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./emissions-data/chaincode/emissionscontract/typescript
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16.15.0"
      - name: Install dependencies
        run: |
          npm i -g npm@latest
          npm ci
      - name: Run lint script
        run: npm run lint

  lint-datalock-chaincode: # Run linting for the chaincode/datalock directory using golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run lint script
        uses: golangci/golangci-lint-action@v2
        with:
          working-directory: ./emissions-data/chaincode/datalock

  test-datalock-chaincode: # Run chaincode tests for the chaincode/datalock directory
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./emissions-data/chaincode/datalock
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.18"
      - name: Run chaincode tests
        run: go test -v internal/*.go -count=1

  test-net-emissions-token-network: # Run tests for the net-emissions-token-network directory
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: blockchain-carbon-accounting-test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    defaults:
      run:
        working-directory: ./net-emissions-token-network
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16.15.0"
      - name: Install dependencies
        run: |
          npm i -g npm@latest
          npm ci
      - name: Run tests
        run: npx hardhat test
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

  test-typescript-app: # Build and test the typescript_app project
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./emissions-data
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16.4.0"
      - name: Download Fabric binaries
        run: |
          sudo chmod +x /usr/local/bin/docker-compose
          cd docker-compose-setup/
          ./bootstrap.sh  2.4.2 1.5.2 -d -s
      - name: Start local Hardhat network # Start local Hardhat network needed for running net emissions token network
        run: |
          cd ../net-emissions-token-network/
          npm i -g npm@latest
          npm ci
          echo "n" | npx hardhat node &
      - name: Build emissions-data project # Add required hostnames to /etc/hosts and runs start script
        run: |
          cd docker-compose-setup/
          echo "127.0.0.1       auditor1.carbonAccounting.com
          127.0.0.1       auditor2.carbonAccounting.com
          127.0.0.1       peer1.auditor1.carbonAccounting.com
          127.0.0.1       peer1.auditor2.carbonAccounting.com
          127.0.0.1       peer1.auditor1.carbonAccounting.com" | sudo tee -a /etc/hosts
          ./startDev.sh &
      - name: Run tests # Wait for the blockchain network to start up and then run the tests
        run: |
          cd typescript_app/
          while ! timeout 1 bash -c "echo > /dev/tcp/localhost/8080" > /dev/null 2>&1; do sleep 10; done
          npm run test:setup
          npm run test:ci
      - uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: emissions-data/typescript_app/test-results.json
